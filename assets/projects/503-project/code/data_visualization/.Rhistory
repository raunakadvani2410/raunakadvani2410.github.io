#a <- ggplotly(a)
#z <- subplot(
#  with_options(list(digits = 1), ggplotly(a)),
#  with_options(list(digits = 6, scipen = 20), ggplotly(a))
#)
a <- ggplotly(a, tooltip = c("Date", "Total Deposits", "Bank Class")) %>%
layout(hoverlabel = list(bgcolor = "white", font = list(family = "arial", size = 12)),
hovertemplate = paste(
"Date: %{x}<br> <br>",
"%{x} <br>",
"Total Deposits (USD): %{y:.20f}"
)
)
a
saveWidget(a, file = "../../website/plots/timeseries/plot_1.html")
View(df_agg)
#g <- ggplot(df_agg, aes(date, total_deposits))
#p <- g + geom_bar(aes(fill = BKCLASS))
a <- ggplot(df_agg, aes(x = `Date`)) + geom_bar(aes(y = TotalDeposits, fill = `Bank Class`, text = paste("Date: ", Date, "<br>Total Deposits: ", `Total Deposits`, "<br> Bank Class: ", `Bank Class`)), stat = 'identity') +
ylab("Total Deposits (USD)") +
xlab("Date") +
theme_bw() +
scale_fill_discrete(name = "Bank Class") +
scale_y_continuous(labels = function(x) paste0(format(x/1e12, scientific = FALSE), "T"))
#scale_y_continuous(labels = function(x) paste0(x/1e12, "T"))
#a <- ggplotly(a)
#z <- subplot(
#  with_options(list(digits = 1), ggplotly(a)),
#  with_options(list(digits = 6, scipen = 20), ggplotly(a))
#)
a <- ggplotly(a, tooltip = c("text")) %>%
layout(hoverlabel = list(bgcolor = "white", font = list(family = "arial", size = 12)),
hovertemplate = paste(
"Date: %{x}<br> <br>",
"%{x} <br>",
"Total Deposits (USD): %{y:.20f}"
)
)
a
saveWidget(a, file = "../../website/plots/timeseries/plot_1.html")
View(filtered_desc)
percent = c('15.7%', '62.4%', '18.3%', '3.6%')
filtered_desc$percent <- ifelse(filtered_desc$asset_class == "<100M", "15.7%",
ifelse(filtered_desc$asset_class == "100M-1B", "62.4%",
ifelse(filtered_desc$asset_class == "1B-10B", "18.3%",
"3.6%")))
c <- plot_ly(
x = filtered_desc$asset_class,
type = "histogram",
name = "Asset Class",
visible = TRUE,
showlegend = FALSE,
opacity = 1,
text = list('15.7%', '62.4%', '18.3%', '3.6%'),
#hoverinfo = "Asset Class, Count",
#hovertext = "Asset Class, Count",
hovertext = paste("Asset Class: ", asset_class, "<br>Count: ", Count),
orientation = "v",
marker = list(color = "green")) |>
layout(title = list(text = "",
font = list(color = "black",
family = "Open Sans",
size = 17
)),
plot_bgcolor = "white",
paper_bgcolor = "white",
xaxis = list(color = "black",
title = "Assets in Possession (USD)",
gridcolor = "white"),
yaxis = list(color = "black",
title = "Count",
gridcolor = "white")
)# |>
percent = c('15.7%', '62.4%', '18.3%', '3.6%')
filtered_desc$percent <- ifelse(filtered_desc$asset_class == "<100M", "15.7%",
ifelse(filtered_desc$asset_class == "100M-1B", "62.4%",
ifelse(filtered_desc$asset_class == "1B-10B", "18.3%",
"3.6%")))
c <- plot_ly(
x = filtered_desc$asset_class,
type = "histogram",
name = "Asset Class",
visible = TRUE,
showlegend = FALSE,
opacity = 1,
text = list('15.7%', '62.4%', '18.3%', '3.6%'),
#hoverinfo = "Asset Class, Count",
#hovertext = "Asset Class, Count",
hovertext = paste("Asset Class: ", filtered_desc$asset_class, "<br>Count: ", filtered_desc$Count),
orientation = "v",
marker = list(color = "green")) |>
layout(title = list(text = "",
font = list(color = "black",
family = "Open Sans",
size = 17
)),
plot_bgcolor = "white",
paper_bgcolor = "white",
xaxis = list(color = "black",
title = "Assets in Possession (USD)",
gridcolor = "white"),
yaxis = list(color = "black",
title = "Count",
gridcolor = "white")
)# |>
#add_trace(
#labels = ~languages,
#values = ~users,
# type = "histogram",
#hovertemplate = "<b><i>Asset Class: %{asset_class}</i></b> <br> <b><i>Count: %{count}</i></b>"
# ) #|>
#layout(hoverlabel = list(
# font = list(
#family = "Sitka Small",
#size = 16,
#color = "black"
#)))
c
saveWidget(c, file = "../../website/plots/timeseries/plot_3.html")
percent = c('15.7%', '62.4%', '18.3%', '3.6%')
filtered_desc$percent <- ifelse(filtered_desc$asset_class == "<100M", "15.7%",
ifelse(filtered_desc$asset_class == "100M-1B", "62.4%",
ifelse(filtered_desc$asset_class == "1B-10B", "18.3%",
"3.6%")))
c <- plot_ly(
x = filtered_desc$asset_class,
type = "histogram",
name = "Asset Class",
visible = TRUE,
showlegend = FALSE,
opacity = 1,
text = list('15.7%', '62.4%', '18.3%', '3.6%'),
#hoverinfo = "Asset Class, Count",
#hovertext = "Asset Class, Count",
#hovertext = paste("Asset Class: ", filtered_desc$asset_class, "<br>Count: ", filtered_desc$Count),
hovertemplate = "<b><i>Asset Class: %{asset_class}</i></b> <br> <b><i>Count: %{count}</i></b>"
orientation = "v",
percent = c('15.7%', '62.4%', '18.3%', '3.6%')
filtered_desc$percent <- ifelse(filtered_desc$asset_class == "<100M", "15.7%",
ifelse(filtered_desc$asset_class == "100M-1B", "62.4%",
ifelse(filtered_desc$asset_class == "1B-10B", "18.3%",
"3.6%")))
c <- plot_ly(
x = filtered_desc$asset_class,
type = "histogram",
name = "Asset Class",
visible = TRUE,
showlegend = FALSE,
opacity = 1,
text = list('15.7%', '62.4%', '18.3%', '3.6%'),
#hoverinfo = "Asset Class, Count",
#hovertext = "Asset Class, Count",
#hovertext = paste("Asset Class: ", filtered_desc$asset_class, "<br>Count: ", filtered_desc$Count),
hovertemplate = "<b><i>Asset Class: %{asset_class}</i></b> <br> <b><i>Count: %{count}</i></b>",
orientation = "v",
marker = list(color = "green")) |>
layout(title = list(text = "",
font = list(color = "black",
family = "Open Sans",
size = 17
)),
plot_bgcolor = "white",
paper_bgcolor = "white",
xaxis = list(color = "black",
title = "Assets in Possession (USD)",
gridcolor = "white"),
yaxis = list(color = "black",
title = "Count",
gridcolor = "white")
)# |>
#add_trace(
#labels = ~languages,
#values = ~users,
# type = "histogram",
#hovertemplate = "<b><i>Asset Class: %{asset_class}</i></b> <br> <b><i>Count: %{count}</i></b>"
# ) #|>
#layout(hoverlabel = list(
# font = list(
#family = "Sitka Small",
#size = 16,
#color = "black"
#)))
c
saveWidget(c, file = "../../website/plots/timeseries/plot_3.html")
percent = c('15.7%', '62.4%', '18.3%', '3.6%')
filtered_desc$percent <- ifelse(filtered_desc$asset_class == "<100M", "15.7%",
ifelse(filtered_desc$asset_class == "100M-1B", "62.4%",
ifelse(filtered_desc$asset_class == "1B-10B", "18.3%",
"3.6%")))
c <- plot_ly(
x = filtered_desc$asset_class,
type = "histogram",
name = "Asset Class",
visible = TRUE,
showlegend = FALSE,
opacity = 1,
text = list('15.7%', '62.4%', '18.3%', '3.6%'),
#hoverinfo = "Asset Class, Count",
#hovertext = "Asset Class, Count",
hovertext = paste("Asset Class: ", filtered_desc$asset_class, "<br>Count: ", filtered_desc$Count),
orientation = "v",
marker = list(color = "green")) |>
layout(title = list(text = "",
font = list(color = "black",
family = "Open Sans",
size = 17
)),
plot_bgcolor = "white",
paper_bgcolor = "white",
xaxis = list(color = "black",
title = "Assets in Possession (USD)",
gridcolor = "white"),
yaxis = list(color = "black",
title = "Count",
gridcolor = "white")
)# |>
#add_trace(
#labels = ~languages,
#values = ~users,
# type = "histogram",
#hovertemplate = "<b><i>Asset Class: %{asset_class}</i></b> <br> <b><i>Count: %{count}</i></b>"
# ) #|>
#layout(hoverlabel = list(
# font = list(
#family = "Sitka Small",
#size = 16,
#color = "black"
#)))
c
saveWidget(c, file = "../../website/plots/timeseries/plot_3.html")
filtered_desc$Count <- ifelse(filtered_desc$asset_class == "<100M", 564,
ifelse(filtered_desc$asset_class == "100M-1B", 2595,
ifelse(filtered_desc$asset_class == "1B-10B", 761,
ifelse(filtered_desc$asset_class == "10B-4T", 151, NA))))
percent = c('15.7%', '62.4%', '18.3%', '3.6%')
filtered_desc$percent <- ifelse(filtered_desc$asset_class == "<100M", "15.7%",
ifelse(filtered_desc$asset_class == "100M-1B", "62.4%",
ifelse(filtered_desc$asset_class == "1B-10B", "18.3%",
"3.6%")))
c <- plot_ly(
x = filtered_desc$asset_class,
type = "histogram",
name = "Asset Class",
visible = TRUE,
showlegend = FALSE,
opacity = 1,
text = list('15.7%', '62.4%', '18.3%', '3.6%'),
#hoverinfo = "Asset Class, Count",
#hovertext = "Asset Class, Count",
hovertext = paste("Asset Class: ", filtered_desc$asset_class, "<br>Count: ", filtered_desc$Count),
orientation = "v",
marker = list(color = "green")) |>
layout(title = list(text = "",
font = list(color = "black",
family = "Open Sans",
size = 17
)),
plot_bgcolor = "white",
paper_bgcolor = "white",
xaxis = list(color = "black",
title = "Assets in Possession (USD)",
gridcolor = "white"),
yaxis = list(color = "black",
title = "Count",
gridcolor = "white")
)# |>
#add_trace(
#labels = ~languages,
#values = ~users,
# type = "histogram",
#hovertemplate = "<b><i>Asset Class: %{asset_class}</i></b> <br> <b><i>Count: %{count}</i></b>"
# ) #|>
#layout(hoverlabel = list(
# font = list(
#family = "Sitka Small",
#size = 16,
#color = "black"
#)))
c
saveWidget(c, file = "../../website/plots/timeseries/plot_3.html")
View(filtered_desc)
stats <- data.frame(
asset_class = c("<100M", "100M-1B", "1B-10B", "10B-4T"),
count = c(564, 2595, 761, 151)
)
percent = c('15.7%', '62.4%', '18.3%', '3.6%')
filtered_desc$percent <- ifelse(filtered_desc$asset_class == "<100M", "15.7%",
ifelse(filtered_desc$asset_class == "100M-1B", "62.4%",
ifelse(filtered_desc$asset_class == "1B-10B", "18.3%",
"3.6%")))
c <- plot_ly(
x = filtered_desc$asset_class,
type = "histogram",
name = "Asset Class",
visible = TRUE,
showlegend = FALSE,
opacity = 1,
text = list('15.7%', '62.4%', '18.3%', '3.6%'),
#hoverinfo = "Asset Class, Count",
#hovertext = "Asset Class, Count",
hovertext = paste("Asset Class: ", stats$asset_class, "<br>Count: ", stats$count),
orientation = "v",
marker = list(color = "green")) |>
layout(title = list(text = "",
font = list(color = "black",
family = "Open Sans",
size = 17
)),
plot_bgcolor = "white",
paper_bgcolor = "white",
xaxis = list(color = "black",
title = "Assets in Possession (USD)",
gridcolor = "white"),
yaxis = list(color = "black",
title = "Count",
gridcolor = "white")
)# |>
#add_trace(
#labels = ~languages,
#values = ~users,
# type = "histogram",
#hovertemplate = "<b><i>Asset Class: %{asset_class}</i></b> <br> <b><i>Count: %{count}</i></b>"
# ) #|>
#layout(hoverlabel = list(
# font = list(
#family = "Sitka Small",
#size = 16,
#color = "black"
#)))
c
percent = c('15.7%', '62.4%', '18.3%', '3.6%')
filtered_desc$percent <- ifelse(filtered_desc$asset_class == "<100M", "15.7%",
ifelse(filtered_desc$asset_class == "100M-1B", "62.4%",
ifelse(filtered_desc$asset_class == "1B-10B", "18.3%",
"3.6%")))
c <- plot_ly(
x = filtered_desc$asset_class,
type = "histogram",
name = "Asset Class",
visible = TRUE,
showlegend = FALSE,
opacity = 1,
text = list('15.7%', '62.4%', '18.3%', '3.6%'),
#hoverinfo = "Asset Class, Count",
#hovertext = "Asset Class, Count",
hovertext = paste("Asset Class: ", filtered_desc$asset_class, "<br>Count: ", filtered_desc$Count),
orientation = "v",
marker = list(color = "green")) |>
layout(title = list(text = "",
font = list(color = "black",
family = "Open Sans",
size = 17
)),
plot_bgcolor = "white",
paper_bgcolor = "white",
xaxis = list(color = "black",
title = "Assets in Possession (USD)",
gridcolor = "white"),
yaxis = list(color = "black",
title = "Count",
gridcolor = "white")
)# |>
#add_trace(
#labels = ~languages,
#values = ~users,
# type = "histogram",
#hovertemplate = "<b><i>Asset Class: %{asset_class}</i></b> <br> <b><i>Count: %{count}</i></b>"
# ) #|>
#layout(hoverlabel = list(
# font = list(
#family = "Sitka Small",
#size = 16,
#color = "black"
#)))
c
saveWidget(c, file = "../../website/plots/timeseries/plot_3.html")
percent = c('15.7%', '62.4%', '18.3%', '3.6%')
filtered_desc$percent <- ifelse(filtered_desc$asset_class == "<100M", "15.7%",
ifelse(filtered_desc$asset_class == "100M-1B", "62.4%",
ifelse(filtered_desc$asset_class == "1B-10B", "18.3%",
"3.6%")))
c <- plot_ly(
x = filtered_desc$asset_class,
type = "histogram",
name = "Asset Class",
visible = TRUE,
showlegend = FALSE,
opacity = 1,
text = list('15.7%', '62.4%', '18.3%', '3.6%'),
#hoverinfo = "Asset Class, Count",
hovertext = "Asset Class, Count",
#hovertext = paste("Asset Class: ", filtered_desc$asset_class, "<br>Count: ", filtered_desc$Count),
orientation = "v",
marker = list(color = "green")) |>
layout(title = list(text = "",
font = list(color = "black",
family = "Open Sans",
size = 17
)),
plot_bgcolor = "white",
paper_bgcolor = "white",
xaxis = list(color = "black",
title = "Assets in Possession (USD)",
gridcolor = "white"),
yaxis = list(color = "black",
title = "Count",
gridcolor = "white")
)# |>
#add_trace(
#labels = ~languages,
#values = ~users,
# type = "histogram",
#hovertemplate = "<b><i>Asset Class: %{asset_class}</i></b> <br> <b><i>Count: %{count}</i></b>"
# ) #|>
#layout(hoverlabel = list(
# font = list(
#family = "Sitka Small",
#size = 16,
#color = "black"
#)))
c
saveWidget(c, file = "../../website/plots/timeseries/plot_3.html")
ap <- decades_wide %>% plot_ly() #text = list('15.7%'))
ap <- ap %>%
add_trace(x = decades_wide$year, y = ~top5, type = 'bar', name = 'Top 5', marker = list(color = '#118C4F'))
ap <- ap %>%
add_trace(x = decades_wide$year, y = ~next125, type = 'bar', name = 'Next 125', marker = list(color = '#FFB90D'))
ap <- ap %>%
add_trace(x = decades_wide$year, y = ~others, type = 'bar', name = 'Others' , marker = list(color = 'red'))
#hovertemplate = paste('<i>Price</i>: $%{top5:.2f}',
#                        '<br><b>X</b>: %year<br>',
#                        '<b>%{text}</b>'))
f <- list(
family = "Arial",
size = 18,
color = "black")
f1 <- list(
title = "Year",
titlefont = "Arial")
f2 <- list(
title = "Total Assets (USD)",
titlefont = "Arial")
f3 <- list(
family = "Arial",
size = 18,
color = "black")
ap <- ap %>% layout(xaxis = f1, yaxis = f2)
ap <- ap %>% layout(title= list(text = "", y = 0.98, font = f3))
ap <- ap %>% layout(legend=list(title=list(text='Asset Group')))
ap
saveWidget(ap, file = "../../website/plots/timeseries/plot_4.html")
#
ap <- decades_wide %>% plot_ly(
hovertext = "Year, Total Assets",
) #text = list('15.7%'))
ap <- decades_wide %>% plot_ly(
hovertext = "Year, Total Assets"
) #text = list('15.7%'))
ap <- ap %>%
add_trace(x = decades_wide$year, y = ~top5, type = 'bar', name = 'Top 5', marker = list(color = '#118C4F'))
ap <- ap %>%
add_trace(x = decades_wide$year, y = ~next125, type = 'bar', name = 'Next 125', marker = list(color = '#FFB90D'))
ap <- ap %>%
add_trace(x = decades_wide$year, y = ~others, type = 'bar', name = 'Others' , marker = list(color = 'red'))
#hovertemplate = paste('<i>Price</i>: $%{top5:.2f}',
#                        '<br><b>X</b>: %year<br>',
#                        '<b>%{text}</b>'))
f <- list(
family = "Arial",
size = 18,
color = "black")
f1 <- list(
title = "Year",
titlefont = "Arial")
f2 <- list(
title = "Total Assets (USD)",
titlefont = "Arial")
f3 <- list(
family = "Arial",
size = 18,
color = "black")
ap <- ap %>% layout(xaxis = f1, yaxis = f2)
ap <- ap %>% layout(title= list(text = "", y = 0.98, font = f3))
ap <- ap %>% layout(legend=list(title=list(text='Asset Group')))
ap
saveWidget(ap, file = "../../website/plots/timeseries/plot_4.html")
#
#g <- ggplot(df_agg, aes(date, total_deposits))
#p <- g + geom_bar(aes(fill = BKCLASS))
a <- ggplot(df_agg, aes(x = `Date`)) + geom_bar(aes(y = TotalDeposits, fill = `Bank Class`, text = paste("Date: ", Date, "<br>Total Deposits: ", `Total Deposits`, "<br> Bank Class: ", `Bank Class`)), stat = 'identity') +
ylab("Total Deposits (USD)") +
xlab("Date") +
theme_bw() +
scale_fill_discrete(name = "Bank Class") +
scale_y_continuous(labels = function(x) paste0(format(x/1e12, scientific = FALSE), "T"))
#scale_y_continuous(labels = function(x) paste0(x/1e12, "T"))
#a <- ggplotly(a)
#z <- subplot(
#  with_options(list(digits = 1), ggplotly(a)),
#  with_options(list(digits = 6, scipen = 20), ggplotly(a))
#)
a <- ggplotly(a, tooltip = c("text")) %>%
layout(hoverlabel = list(bgcolor = "white", font = list(family = "arial", size = 12)),
hovertemplate = paste(
"Date: %{x}<br> <br>",
"%{x} <br>",
"Total Deposits (USD): %{y:.20f}"
)
)
a
saveWidget(a, file = "../../website/plots/timeseries/plot_1.html")
quarto preview
